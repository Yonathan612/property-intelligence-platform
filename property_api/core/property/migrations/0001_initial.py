# Generated by Django 5.0.2 on 2025-08-07 01:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin', models.CharField(db_index=True, help_text='Property Identification Number', max_length=20, unique=True)),
                ('pin10', models.CharField(db_index=True, help_text='10-digit PIN format', max_length=15)),
                ('year', models.IntegerField(help_text='Tax year')),
                ('class_code', models.CharField(help_text='Property class code', max_length=10)),
                ('row_id', models.CharField(help_text='Unique row identifier', max_length=50, unique=True)),
                ('longitude', models.FloatField(help_text='Longitude coordinate')),
                ('latitude', models.FloatField(help_text='Latitude coordinate')),
                ('x_3435', models.FloatField(blank=True, help_text='X coordinate in Illinois State Plane', null=True)),
                ('y_3435', models.FloatField(blank=True, help_text='Y coordinate in Illinois State Plane', null=True)),
                ('zip_code', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('triad_name', models.CharField(help_text='Triad name', max_length=50)),
                ('triad_code', models.IntegerField(help_text='Triad code')),
                ('township_name', models.CharField(help_text='Township name', max_length=50)),
                ('township_code', models.IntegerField(help_text='Township code')),
                ('nbhd_code', models.CharField(help_text='Neighborhood code', max_length=20)),
                ('tax_code', models.CharField(help_text='Tax code', max_length=20)),
                ('census_block_group_geoid', models.CharField(blank=True, max_length=20, null=True)),
                ('census_block_geoid', models.CharField(blank=True, max_length=20, null=True)),
                ('census_congressional_district_geoid', models.CharField(blank=True, max_length=10, null=True)),
                ('census_congressional_district_num', models.IntegerField(blank=True, null=True)),
                ('census_tract_geoid', models.CharField(blank=True, max_length=20, null=True)),
                ('census_data_year', models.IntegerField(blank=True, null=True)),
                ('ward_num', models.IntegerField(blank=True, help_text='Chicago ward number', null=True)),
                ('ward_chicago_data_year', models.IntegerField(blank=True, null=True)),
                ('chicago_community_area_num', models.IntegerField(blank=True, null=True)),
                ('chicago_community_area_name', models.CharField(blank=True, max_length=100, null=True)),
                ('chicago_police_district_num', models.IntegerField(blank=True, null=True)),
                ('school_elementary_district_geoid', models.CharField(blank=True, max_length=20, null=True)),
                ('school_elementary_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('school_secondary_district_geoid', models.CharField(blank=True, max_length=20, null=True)),
                ('school_secondary_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('school_unified_district_geoid', models.CharField(blank=True, max_length=20, null=True)),
                ('school_unified_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('school_school_year', models.CharField(blank=True, max_length=20, null=True)),
                ('school_data_year', models.IntegerField(blank=True, null=True)),
                ('tax_municipality_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_municipality_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_school_elementary_district_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_school_elementary_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_school_secondary_district_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_school_secondary_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_community_college_district_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_community_college_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_fire_protection_district_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_fire_protection_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_library_district_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_library_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_park_district_num', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_park_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_tif_district_num', models.FloatField(blank=True, null=True)),
                ('tax_tif_district_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_data_year', models.IntegerField(blank=True, null=True)),
                ('env_flood_fema_sfha', models.BooleanField(blank=True, help_text='FEMA Special Flood Hazard Area', null=True)),
                ('env_flood_fema_data_year', models.IntegerField(blank=True, null=True)),
                ('env_flood_fs_factor', models.FloatField(blank=True, help_text='Flood factor score', null=True)),
                ('env_flood_fs_risk_direction', models.CharField(blank=True, max_length=50, null=True)),
                ('env_ohare_noise_contour_no_buffer_bool', models.BooleanField(blank=True, null=True)),
                ('env_ohare_noise_contour_half_mile_buffer_bool', models.BooleanField(blank=True, null=True)),
                ('env_airport_noise_dnl', models.FloatField(blank=True, help_text='Airport noise level in DNL', null=True)),
                ('econ_enterprise_zone_num', models.CharField(blank=True, max_length=20, null=True)),
                ('econ_qualified_opportunity_zone_num', models.CharField(blank=True, max_length=20, null=True)),
                ('access_cmap_walk_id', models.IntegerField(blank=True, null=True)),
                ('access_cmap_walk_nta_score', models.FloatField(blank=True, null=True)),
                ('access_cmap_walk_total_score', models.FloatField(blank=True, null=True)),
                ('access_cmap_walk_data_year', models.IntegerField(blank=True, null=True)),
                ('misc_subdivision_id', models.CharField(blank=True, max_length=50, null=True)),
                ('misc_subdivision_data_year', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'properties',
                'ordering': ['pin'],
                'indexes': [models.Index(fields=['pin'], name='properties_pin_97aa95_idx'), models.Index(fields=['zip_code'], name='properties_zip_cod_924e35_idx'), models.Index(fields=['latitude', 'longitude'], name='properties_latitud_5ee5e3_idx'), models.Index(fields=['chicago_community_area_num'], name='properties_chicago_50e9c6_idx'), models.Index(fields=['ward_num'], name='properties_ward_nu_45c595_idx'), models.Index(fields=['township_name'], name='properties_townshi_256fa8_idx')],
            },
        ),
        migrations.CreateModel(
            name='PropertySearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_text', models.TextField(help_text='Combined searchable text')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='search_index', to='property.property')),
            ],
            options={
                'db_table': 'property_search_index',
            },
        ),
    ]
